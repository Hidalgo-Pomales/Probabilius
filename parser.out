Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> AVG LPAREN LIST RPAREN
Rule 2     statement -> PERMU LPAREN LISTCHAR RPAREN
Rule 3     statement -> PERMU LPAREN LIST RPAREN
Rule 4     statement -> COMBI LPAREN LIST RPAREN
Rule 5     statement -> COMBI LPAREN LISTCHAR RPAREN
Rule 6     statement -> MODE LPAREN LIST RPAREN
Rule 7     statement -> MEDIAN LPAREN LIST RPAREN
Rule 8     statement -> UNION LPAREN LIST COMMA LIST RPAREN
Rule 9     statement -> INTER LPAREN LIST COMMA LIST RPAREN
Rule 10    statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN
Rule 11    statement -> VARIAN LPAREN LIST RPAREN
Rule 12    statement -> STDDEV LPAREN LIST RPAREN
Rule 13    statement -> ID EQUALS expression
Rule 14    statement -> expression
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> MINUS expression
Rule 20    expression -> LPAREN expression RPAREN
Rule 21    expression -> LIST
Rule 22    expression -> NUMBER
Rule 23    expression -> ID

Terminals, with rules where they appear

AVG                  : 1
COMBI                : 4 5
COMMA                : 8 9 10
COMPLEM              : 10
DIVIDE               : 18
EQUALS               : 13
ID                   : 13 23
INTER                : 9
LIST                 : 1 3 4 6 7 8 8 9 9 10 10 11 12 21
LISTCHAR             : 2 5
LPAREN               : 1 2 3 4 5 6 7 8 9 10 11 12 20
MEDIAN               : 7
MINUS                : 16 19
MODE                 : 6
NUMBER               : 22
PERMU                : 2 3
PLUS                 : 15
RPAREN               : 1 2 3 4 5 6 7 8 9 10 11 12 20
STDDEV               : 12
TIMES                : 17
UNION                : 8
VARIAN               : 11
error                : 

Nonterminals, with rules where they appear

expression           : 13 14 15 15 16 16 17 17 18 18 19 20
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . AVG LPAREN LIST RPAREN
    (2) statement -> . PERMU LPAREN LISTCHAR RPAREN
    (3) statement -> . PERMU LPAREN LIST RPAREN
    (4) statement -> . COMBI LPAREN LIST RPAREN
    (5) statement -> . COMBI LPAREN LISTCHAR RPAREN
    (6) statement -> . MODE LPAREN LIST RPAREN
    (7) statement -> . MEDIAN LPAREN LIST RPAREN
    (8) statement -> . UNION LPAREN LIST COMMA LIST RPAREN
    (9) statement -> . INTER LPAREN LIST COMMA LIST RPAREN
    (10) statement -> . COMPLEM LPAREN LIST COMMA LIST RPAREN
    (11) statement -> . VARIAN LPAREN LIST RPAREN
    (12) statement -> . STDDEV LPAREN LIST RPAREN
    (13) statement -> . ID EQUALS expression
    (14) statement -> . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    AVG             shift and go to state 14
    PERMU           shift and go to state 16
    COMBI           shift and go to state 17
    MODE            shift and go to state 12
    MEDIAN          shift and go to state 15
    UNION           shift and go to state 10
    INTER           shift and go to state 2
    COMPLEM         shift and go to state 13
    VARIAN          shift and go to state 5
    STDDEV          shift and go to state 11
    ID              shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3

    statement                      shift and go to state 9
    expression                     shift and go to state 4

state 1

    (13) statement -> ID . EQUALS expression
    (23) expression -> ID .

    EQUALS          shift and go to state 18
    PLUS            reduce using rule 23 (expression -> ID .)
    MINUS           reduce using rule 23 (expression -> ID .)
    TIMES           reduce using rule 23 (expression -> ID .)
    DIVIDE          reduce using rule 23 (expression -> ID .)
    $end            reduce using rule 23 (expression -> ID .)


state 2

    (9) statement -> INTER . LPAREN LIST COMMA LIST RPAREN

    LPAREN          shift and go to state 19


state 3

    (22) expression -> NUMBER .

    PLUS            reduce using rule 22 (expression -> NUMBER .)
    MINUS           reduce using rule 22 (expression -> NUMBER .)
    TIMES           reduce using rule 22 (expression -> NUMBER .)
    DIVIDE          reduce using rule 22 (expression -> NUMBER .)
    $end            reduce using rule 22 (expression -> NUMBER .)
    RPAREN          reduce using rule 22 (expression -> NUMBER .)


state 4

    (14) statement -> expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    $end            reduce using rule 14 (statement -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 23
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 22


state 5

    (11) statement -> VARIAN . LPAREN LIST RPAREN

    LPAREN          shift and go to state 24


state 6

    (20) expression -> LPAREN . expression RPAREN
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 26

state 7

    (19) expression -> MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 27

state 8

    (21) expression -> LIST .

    PLUS            reduce using rule 21 (expression -> LIST .)
    MINUS           reduce using rule 21 (expression -> LIST .)
    TIMES           reduce using rule 21 (expression -> LIST .)
    DIVIDE          reduce using rule 21 (expression -> LIST .)
    $end            reduce using rule 21 (expression -> LIST .)
    RPAREN          reduce using rule 21 (expression -> LIST .)


state 9

    (0) S' -> statement .



state 10

    (8) statement -> UNION . LPAREN LIST COMMA LIST RPAREN

    LPAREN          shift and go to state 28


state 11

    (12) statement -> STDDEV . LPAREN LIST RPAREN

    LPAREN          shift and go to state 29


state 12

    (6) statement -> MODE . LPAREN LIST RPAREN

    LPAREN          shift and go to state 30


state 13

    (10) statement -> COMPLEM . LPAREN LIST COMMA LIST RPAREN

    LPAREN          shift and go to state 31


state 14

    (1) statement -> AVG . LPAREN LIST RPAREN

    LPAREN          shift and go to state 32


state 15

    (7) statement -> MEDIAN . LPAREN LIST RPAREN

    LPAREN          shift and go to state 33


state 16

    (2) statement -> PERMU . LPAREN LISTCHAR RPAREN
    (3) statement -> PERMU . LPAREN LIST RPAREN

    LPAREN          shift and go to state 34


state 17

    (4) statement -> COMBI . LPAREN LIST RPAREN
    (5) statement -> COMBI . LPAREN LISTCHAR RPAREN

    LPAREN          shift and go to state 35


state 18

    (13) statement -> ID EQUALS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 36

state 19

    (9) statement -> INTER LPAREN . LIST COMMA LIST RPAREN

    LIST            shift and go to state 37


state 20

    (17) expression -> expression TIMES . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 38

state 21

    (15) expression -> expression PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 39

state 22

    (18) expression -> expression DIVIDE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 40

state 23

    (16) expression -> expression MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . MINUS expression
    (20) expression -> . LPAREN expression RPAREN
    (21) expression -> . LIST
    (22) expression -> . NUMBER
    (23) expression -> . ID

    MINUS           shift and go to state 7
    LPAREN          shift and go to state 6
    LIST            shift and go to state 8
    NUMBER          shift and go to state 3
    ID              shift and go to state 25

    expression                     shift and go to state 41

state 24

    (11) statement -> VARIAN LPAREN . LIST RPAREN

    LIST            shift and go to state 42


state 25

    (23) expression -> ID .

    PLUS            reduce using rule 23 (expression -> ID .)
    MINUS           reduce using rule 23 (expression -> ID .)
    TIMES           reduce using rule 23 (expression -> ID .)
    DIVIDE          reduce using rule 23 (expression -> ID .)
    $end            reduce using rule 23 (expression -> ID .)
    RPAREN          reduce using rule 23 (expression -> ID .)


state 26

    (20) expression -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 43
    PLUS            shift and go to state 21
    MINUS           shift and go to state 23
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 22


state 27

    (19) expression -> MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 19 (expression -> MINUS expression .)
    MINUS           reduce using rule 19 (expression -> MINUS expression .)
    TIMES           reduce using rule 19 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 19 (expression -> MINUS expression .)
    $end            reduce using rule 19 (expression -> MINUS expression .)
    RPAREN          reduce using rule 19 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 23 ]
  ! TIMES           [ shift and go to state 20 ]
  ! DIVIDE          [ shift and go to state 22 ]


state 28

    (8) statement -> UNION LPAREN . LIST COMMA LIST RPAREN

    LIST            shift and go to state 44


state 29

    (12) statement -> STDDEV LPAREN . LIST RPAREN

    LIST            shift and go to state 45


state 30

    (6) statement -> MODE LPAREN . LIST RPAREN

    LIST            shift and go to state 46


state 31

    (10) statement -> COMPLEM LPAREN . LIST COMMA LIST RPAREN

    LIST            shift and go to state 47


state 32

    (1) statement -> AVG LPAREN . LIST RPAREN

    LIST            shift and go to state 48


state 33

    (7) statement -> MEDIAN LPAREN . LIST RPAREN

    LIST            shift and go to state 49


state 34

    (2) statement -> PERMU LPAREN . LISTCHAR RPAREN
    (3) statement -> PERMU LPAREN . LIST RPAREN

    LISTCHAR        shift and go to state 51
    LIST            shift and go to state 50


state 35

    (4) statement -> COMBI LPAREN . LIST RPAREN
    (5) statement -> COMBI LPAREN . LISTCHAR RPAREN

    LIST            shift and go to state 52
    LISTCHAR        shift and go to state 53


state 36

    (13) statement -> ID EQUALS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    $end            reduce using rule 13 (statement -> ID EQUALS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 23
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 22


state 37

    (9) statement -> INTER LPAREN LIST . COMMA LIST RPAREN

    COMMA           shift and go to state 54


state 38

    (17) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 17 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 17 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 17 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 17 (expression -> expression TIMES expression .)
    $end            reduce using rule 17 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 17 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 23 ]
  ! TIMES           [ shift and go to state 20 ]
  ! DIVIDE          [ shift and go to state 22 ]


state 39

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    $end            reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 22

  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 23 ]


state 40

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 23 ]
  ! TIMES           [ shift and go to state 20 ]
  ! DIVIDE          [ shift and go to state 22 ]


state 41

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    $end            reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 22

  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 23 ]


state 42

    (11) statement -> VARIAN LPAREN LIST . RPAREN

    RPAREN          shift and go to state 55


state 43

    (20) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 20 (expression -> LPAREN expression RPAREN .)


state 44

    (8) statement -> UNION LPAREN LIST . COMMA LIST RPAREN

    COMMA           shift and go to state 56


state 45

    (12) statement -> STDDEV LPAREN LIST . RPAREN

    RPAREN          shift and go to state 57


state 46

    (6) statement -> MODE LPAREN LIST . RPAREN

    RPAREN          shift and go to state 58


state 47

    (10) statement -> COMPLEM LPAREN LIST . COMMA LIST RPAREN

    COMMA           shift and go to state 59


state 48

    (1) statement -> AVG LPAREN LIST . RPAREN

    RPAREN          shift and go to state 60


state 49

    (7) statement -> MEDIAN LPAREN LIST . RPAREN

    RPAREN          shift and go to state 61


state 50

    (3) statement -> PERMU LPAREN LIST . RPAREN

    RPAREN          shift and go to state 62


state 51

    (2) statement -> PERMU LPAREN LISTCHAR . RPAREN

    RPAREN          shift and go to state 63


state 52

    (4) statement -> COMBI LPAREN LIST . RPAREN

    RPAREN          shift and go to state 64


state 53

    (5) statement -> COMBI LPAREN LISTCHAR . RPAREN

    RPAREN          shift and go to state 65


state 54

    (9) statement -> INTER LPAREN LIST COMMA . LIST RPAREN

    LIST            shift and go to state 66


state 55

    (11) statement -> VARIAN LPAREN LIST RPAREN .

    $end            reduce using rule 11 (statement -> VARIAN LPAREN LIST RPAREN .)


state 56

    (8) statement -> UNION LPAREN LIST COMMA . LIST RPAREN

    LIST            shift and go to state 67


state 57

    (12) statement -> STDDEV LPAREN LIST RPAREN .

    $end            reduce using rule 12 (statement -> STDDEV LPAREN LIST RPAREN .)


state 58

    (6) statement -> MODE LPAREN LIST RPAREN .

    $end            reduce using rule 6 (statement -> MODE LPAREN LIST RPAREN .)


state 59

    (10) statement -> COMPLEM LPAREN LIST COMMA . LIST RPAREN

    LIST            shift and go to state 68


state 60

    (1) statement -> AVG LPAREN LIST RPAREN .

    $end            reduce using rule 1 (statement -> AVG LPAREN LIST RPAREN .)


state 61

    (7) statement -> MEDIAN LPAREN LIST RPAREN .

    $end            reduce using rule 7 (statement -> MEDIAN LPAREN LIST RPAREN .)


state 62

    (3) statement -> PERMU LPAREN LIST RPAREN .

    $end            reduce using rule 3 (statement -> PERMU LPAREN LIST RPAREN .)


state 63

    (2) statement -> PERMU LPAREN LISTCHAR RPAREN .

    $end            reduce using rule 2 (statement -> PERMU LPAREN LISTCHAR RPAREN .)


state 64

    (4) statement -> COMBI LPAREN LIST RPAREN .

    $end            reduce using rule 4 (statement -> COMBI LPAREN LIST RPAREN .)


state 65

    (5) statement -> COMBI LPAREN LISTCHAR RPAREN .

    $end            reduce using rule 5 (statement -> COMBI LPAREN LISTCHAR RPAREN .)


state 66

    (9) statement -> INTER LPAREN LIST COMMA LIST . RPAREN

    RPAREN          shift and go to state 69


state 67

    (8) statement -> UNION LPAREN LIST COMMA LIST . RPAREN

    RPAREN          shift and go to state 70


state 68

    (10) statement -> COMPLEM LPAREN LIST COMMA LIST . RPAREN

    RPAREN          shift and go to state 71


state 69

    (9) statement -> INTER LPAREN LIST COMMA LIST RPAREN .

    $end            reduce using rule 9 (statement -> INTER LPAREN LIST COMMA LIST RPAREN .)


state 70

    (8) statement -> UNION LPAREN LIST COMMA LIST RPAREN .

    $end            reduce using rule 8 (statement -> UNION LPAREN LIST COMMA LIST RPAREN .)


state 71

    (10) statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN .

    $end            reduce using rule 10 (statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN .)

