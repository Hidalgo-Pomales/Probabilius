Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> AVG LPAREN LIST RPAREN
Rule 2     statement -> PERMU LPAREN LISTCHAR RPAREN
Rule 3     statement -> PERMU LPAREN LIST RPAREN
Rule 4     statement -> CIRPER LPAREN LIST RPAREN
Rule 5     statement -> COMBI LPAREN LIST RPAREN
Rule 6     statement -> COMBI LPAREN LISTCHAR RPAREN
Rule 7     statement -> MODE LPAREN LIST RPAREN
Rule 8     statement -> MEDIAN LPAREN LIST RPAREN
Rule 9     statement -> TRIM LPAREN LIST RPAREN
Rule 10    statement -> UNION LPAREN LIST COMMA LIST RPAREN
Rule 11    statement -> INTER LPAREN LIST COMMA LIST RPAREN
Rule 12    statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN
Rule 13    statement -> VARIAN LPAREN LIST RPAREN
Rule 14    statement -> STDDEV LPAREN LIST RPAREN
Rule 15    statement -> ID EQUALS expression
Rule 16    statement -> expression
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> MINUS expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> LIST
Rule 24    expression -> NUMBER
Rule 25    expression -> ID
Rule 26    statement -> PARTIAL LPAREN LIST RPAREN
Rule 27    statement -> RANGE LPAREN LIST RPAREN

Terminals, with rules where they appear

AVG                  : 1
CIRPER               : 4
COMBI                : 5 6
COMMA                : 10 11 12
COMPLEM              : 12
DIVIDE               : 20
EQUALS               : 15
ID                   : 15 25
INTER                : 11
LIST                 : 1 3 4 5 7 8 9 10 10 11 11 12 12 13 14 23 26 27
LISTCHAR             : 2 6
LPAREN               : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 22 26 27
MEDIAN               : 8
MINUS                : 18 21
MODE                 : 7
NUMBER               : 24
PARTIAL              : 26
PERMU                : 2 3
PLUS                 : 17
RANGE                : 27
RPAREN               : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 22 26 27
STDDEV               : 14
TIMES                : 19
TRIM                 : 9
UNION                : 10
VARIAN               : 13
error                : 

Nonterminals, with rules where they appear

expression           : 15 16 17 17 18 18 19 19 20 20 21 22
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . AVG LPAREN LIST RPAREN
    (2) statement -> . PERMU LPAREN LISTCHAR RPAREN
    (3) statement -> . PERMU LPAREN LIST RPAREN
    (4) statement -> . CIRPER LPAREN LIST RPAREN
    (5) statement -> . COMBI LPAREN LIST RPAREN
    (6) statement -> . COMBI LPAREN LISTCHAR RPAREN
    (7) statement -> . MODE LPAREN LIST RPAREN
    (8) statement -> . MEDIAN LPAREN LIST RPAREN
    (9) statement -> . TRIM LPAREN LIST RPAREN
    (10) statement -> . UNION LPAREN LIST COMMA LIST RPAREN
    (11) statement -> . INTER LPAREN LIST COMMA LIST RPAREN
    (12) statement -> . COMPLEM LPAREN LIST COMMA LIST RPAREN
    (13) statement -> . VARIAN LPAREN LIST RPAREN
    (14) statement -> . STDDEV LPAREN LIST RPAREN
    (15) statement -> . ID EQUALS expression
    (16) statement -> . expression
    (26) statement -> . PARTIAL LPAREN LIST RPAREN
    (27) statement -> . RANGE LPAREN LIST RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    AVG             shift and go to state 13
    PERMU           shift and go to state 5
    CIRPER          shift and go to state 14
    COMBI           shift and go to state 15
    MODE            shift and go to state 19
    MEDIAN          shift and go to state 8
    TRIM            shift and go to state 12
    UNION           shift and go to state 3
    INTER           shift and go to state 17
    COMPLEM         shift and go to state 21
    VARIAN          shift and go to state 16
    STDDEV          shift and go to state 2
    ID              shift and go to state 9
    PARTIAL         shift and go to state 11
    RANGE           shift and go to state 1
    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6

    statement                      shift and go to state 18
    expression                     shift and go to state 7

state 1

    (27) statement -> RANGE . LPAREN LIST RPAREN

    LPAREN          shift and go to state 22


state 2

    (14) statement -> STDDEV . LPAREN LIST RPAREN

    LPAREN          shift and go to state 23


state 3

    (10) statement -> UNION . LPAREN LIST COMMA LIST RPAREN

    LPAREN          shift and go to state 24


state 4

    (23) expression -> LIST .

    PLUS            reduce using rule 23 (expression -> LIST .)
    MINUS           reduce using rule 23 (expression -> LIST .)
    TIMES           reduce using rule 23 (expression -> LIST .)
    DIVIDE          reduce using rule 23 (expression -> LIST .)
    $end            reduce using rule 23 (expression -> LIST .)
    RPAREN          reduce using rule 23 (expression -> LIST .)


state 5

    (2) statement -> PERMU . LPAREN LISTCHAR RPAREN
    (3) statement -> PERMU . LPAREN LIST RPAREN

    LPAREN          shift and go to state 25


state 6

    (24) expression -> NUMBER .

    PLUS            reduce using rule 24 (expression -> NUMBER .)
    MINUS           reduce using rule 24 (expression -> NUMBER .)
    TIMES           reduce using rule 24 (expression -> NUMBER .)
    DIVIDE          reduce using rule 24 (expression -> NUMBER .)
    $end            reduce using rule 24 (expression -> NUMBER .)
    RPAREN          reduce using rule 24 (expression -> NUMBER .)


state 7

    (16) statement -> expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    $end            reduce using rule 16 (statement -> expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29


state 8

    (8) statement -> MEDIAN . LPAREN LIST RPAREN

    LPAREN          shift and go to state 30


state 9

    (15) statement -> ID . EQUALS expression
    (25) expression -> ID .

    EQUALS          shift and go to state 31
    PLUS            reduce using rule 25 (expression -> ID .)
    MINUS           reduce using rule 25 (expression -> ID .)
    TIMES           reduce using rule 25 (expression -> ID .)
    DIVIDE          reduce using rule 25 (expression -> ID .)
    $end            reduce using rule 25 (expression -> ID .)


state 10

    (21) expression -> MINUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 32

state 11

    (26) statement -> PARTIAL . LPAREN LIST RPAREN

    LPAREN          shift and go to state 34


state 12

    (9) statement -> TRIM . LPAREN LIST RPAREN

    LPAREN          shift and go to state 35


state 13

    (1) statement -> AVG . LPAREN LIST RPAREN

    LPAREN          shift and go to state 36


state 14

    (4) statement -> CIRPER . LPAREN LIST RPAREN

    LPAREN          shift and go to state 37


state 15

    (5) statement -> COMBI . LPAREN LIST RPAREN
    (6) statement -> COMBI . LPAREN LISTCHAR RPAREN

    LPAREN          shift and go to state 38


state 16

    (13) statement -> VARIAN . LPAREN LIST RPAREN

    LPAREN          shift and go to state 39


state 17

    (11) statement -> INTER . LPAREN LIST COMMA LIST RPAREN

    LPAREN          shift and go to state 40


state 18

    (0) S' -> statement .



state 19

    (7) statement -> MODE . LPAREN LIST RPAREN

    LPAREN          shift and go to state 41


state 20

    (22) expression -> LPAREN . expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 42

state 21

    (12) statement -> COMPLEM . LPAREN LIST COMMA LIST RPAREN

    LPAREN          shift and go to state 43


state 22

    (27) statement -> RANGE LPAREN . LIST RPAREN

    LIST            shift and go to state 44


state 23

    (14) statement -> STDDEV LPAREN . LIST RPAREN

    LIST            shift and go to state 45


state 24

    (10) statement -> UNION LPAREN . LIST COMMA LIST RPAREN

    LIST            shift and go to state 46


state 25

    (2) statement -> PERMU LPAREN . LISTCHAR RPAREN
    (3) statement -> PERMU LPAREN . LIST RPAREN

    LISTCHAR        shift and go to state 48
    LIST            shift and go to state 47


state 26

    (17) expression -> expression PLUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 49

state 27

    (18) expression -> expression MINUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 50

state 28

    (19) expression -> expression TIMES . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 51

state 29

    (20) expression -> expression DIVIDE . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 52

state 30

    (8) statement -> MEDIAN LPAREN . LIST RPAREN

    LIST            shift and go to state 53


state 31

    (15) statement -> ID EQUALS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . LIST
    (24) expression -> . NUMBER
    (25) expression -> . ID

    MINUS           shift and go to state 10
    LPAREN          shift and go to state 20
    LIST            shift and go to state 4
    NUMBER          shift and go to state 6
    ID              shift and go to state 33

    expression                     shift and go to state 54

state 32

    (21) expression -> MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 21 (expression -> MINUS expression .)
    MINUS           reduce using rule 21 (expression -> MINUS expression .)
    TIMES           reduce using rule 21 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 21 (expression -> MINUS expression .)
    $end            reduce using rule 21 (expression -> MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 33

    (25) expression -> ID .

    PLUS            reduce using rule 25 (expression -> ID .)
    MINUS           reduce using rule 25 (expression -> ID .)
    TIMES           reduce using rule 25 (expression -> ID .)
    DIVIDE          reduce using rule 25 (expression -> ID .)
    $end            reduce using rule 25 (expression -> ID .)
    RPAREN          reduce using rule 25 (expression -> ID .)


state 34

    (26) statement -> PARTIAL LPAREN . LIST RPAREN

    LIST            shift and go to state 55


state 35

    (9) statement -> TRIM LPAREN . LIST RPAREN

    LIST            shift and go to state 56


state 36

    (1) statement -> AVG LPAREN . LIST RPAREN

    LIST            shift and go to state 57


state 37

    (4) statement -> CIRPER LPAREN . LIST RPAREN

    LIST            shift and go to state 58


state 38

    (5) statement -> COMBI LPAREN . LIST RPAREN
    (6) statement -> COMBI LPAREN . LISTCHAR RPAREN

    LIST            shift and go to state 59
    LISTCHAR        shift and go to state 60


state 39

    (13) statement -> VARIAN LPAREN . LIST RPAREN

    LIST            shift and go to state 61


state 40

    (11) statement -> INTER LPAREN . LIST COMMA LIST RPAREN

    LIST            shift and go to state 62


state 41

    (7) statement -> MODE LPAREN . LIST RPAREN

    LIST            shift and go to state 63


state 42

    (22) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29


state 43

    (12) statement -> COMPLEM LPAREN . LIST COMMA LIST RPAREN

    LIST            shift and go to state 65


state 44

    (27) statement -> RANGE LPAREN LIST . RPAREN

    RPAREN          shift and go to state 66


state 45

    (14) statement -> STDDEV LPAREN LIST . RPAREN

    RPAREN          shift and go to state 67


state 46

    (10) statement -> UNION LPAREN LIST . COMMA LIST RPAREN

    COMMA           shift and go to state 68


state 47

    (3) statement -> PERMU LPAREN LIST . RPAREN

    RPAREN          shift and go to state 69


state 48

    (2) statement -> PERMU LPAREN LISTCHAR . RPAREN

    RPAREN          shift and go to state 70


state 49

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    $end            reduce using rule 17 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]


state 50

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    $end            reduce using rule 18 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]


state 51

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    $end            reduce using rule 19 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 52

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 20 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]


state 53

    (8) statement -> MEDIAN LPAREN LIST . RPAREN

    RPAREN          shift and go to state 71


state 54

    (15) statement -> ID EQUALS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    $end            reduce using rule 15 (statement -> ID EQUALS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29


state 55

    (26) statement -> PARTIAL LPAREN LIST . RPAREN

    RPAREN          shift and go to state 72


state 56

    (9) statement -> TRIM LPAREN LIST . RPAREN

    RPAREN          shift and go to state 73


state 57

    (1) statement -> AVG LPAREN LIST . RPAREN

    RPAREN          shift and go to state 74


state 58

    (4) statement -> CIRPER LPAREN LIST . RPAREN

    RPAREN          shift and go to state 75


state 59

    (5) statement -> COMBI LPAREN LIST . RPAREN

    RPAREN          shift and go to state 76


state 60

    (6) statement -> COMBI LPAREN LISTCHAR . RPAREN

    RPAREN          shift and go to state 77


state 61

    (13) statement -> VARIAN LPAREN LIST . RPAREN

    RPAREN          shift and go to state 78


state 62

    (11) statement -> INTER LPAREN LIST . COMMA LIST RPAREN

    COMMA           shift and go to state 79


state 63

    (7) statement -> MODE LPAREN LIST . RPAREN

    RPAREN          shift and go to state 80


state 64

    (22) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 65

    (12) statement -> COMPLEM LPAREN LIST . COMMA LIST RPAREN

    COMMA           shift and go to state 81


state 66

    (27) statement -> RANGE LPAREN LIST RPAREN .

    $end            reduce using rule 27 (statement -> RANGE LPAREN LIST RPAREN .)


state 67

    (14) statement -> STDDEV LPAREN LIST RPAREN .

    $end            reduce using rule 14 (statement -> STDDEV LPAREN LIST RPAREN .)


state 68

    (10) statement -> UNION LPAREN LIST COMMA . LIST RPAREN

    LIST            shift and go to state 82


state 69

    (3) statement -> PERMU LPAREN LIST RPAREN .

    $end            reduce using rule 3 (statement -> PERMU LPAREN LIST RPAREN .)


state 70

    (2) statement -> PERMU LPAREN LISTCHAR RPAREN .

    $end            reduce using rule 2 (statement -> PERMU LPAREN LISTCHAR RPAREN .)


state 71

    (8) statement -> MEDIAN LPAREN LIST RPAREN .

    $end            reduce using rule 8 (statement -> MEDIAN LPAREN LIST RPAREN .)


state 72

    (26) statement -> PARTIAL LPAREN LIST RPAREN .

    $end            reduce using rule 26 (statement -> PARTIAL LPAREN LIST RPAREN .)


state 73

    (9) statement -> TRIM LPAREN LIST RPAREN .

    $end            reduce using rule 9 (statement -> TRIM LPAREN LIST RPAREN .)


state 74

    (1) statement -> AVG LPAREN LIST RPAREN .

    $end            reduce using rule 1 (statement -> AVG LPAREN LIST RPAREN .)


state 75

    (4) statement -> CIRPER LPAREN LIST RPAREN .

    $end            reduce using rule 4 (statement -> CIRPER LPAREN LIST RPAREN .)


state 76

    (5) statement -> COMBI LPAREN LIST RPAREN .

    $end            reduce using rule 5 (statement -> COMBI LPAREN LIST RPAREN .)


state 77

    (6) statement -> COMBI LPAREN LISTCHAR RPAREN .

    $end            reduce using rule 6 (statement -> COMBI LPAREN LISTCHAR RPAREN .)


state 78

    (13) statement -> VARIAN LPAREN LIST RPAREN .

    $end            reduce using rule 13 (statement -> VARIAN LPAREN LIST RPAREN .)


state 79

    (11) statement -> INTER LPAREN LIST COMMA . LIST RPAREN

    LIST            shift and go to state 83


state 80

    (7) statement -> MODE LPAREN LIST RPAREN .

    $end            reduce using rule 7 (statement -> MODE LPAREN LIST RPAREN .)


state 81

    (12) statement -> COMPLEM LPAREN LIST COMMA . LIST RPAREN

    LIST            shift and go to state 84


state 82

    (10) statement -> UNION LPAREN LIST COMMA LIST . RPAREN

    RPAREN          shift and go to state 85


state 83

    (11) statement -> INTER LPAREN LIST COMMA LIST . RPAREN

    RPAREN          shift and go to state 86


state 84

    (12) statement -> COMPLEM LPAREN LIST COMMA LIST . RPAREN

    RPAREN          shift and go to state 87


state 85

    (10) statement -> UNION LPAREN LIST COMMA LIST RPAREN .

    $end            reduce using rule 10 (statement -> UNION LPAREN LIST COMMA LIST RPAREN .)


state 86

    (11) statement -> INTER LPAREN LIST COMMA LIST RPAREN .

    $end            reduce using rule 11 (statement -> INTER LPAREN LIST COMMA LIST RPAREN .)


state 87

    (12) statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN .

    $end            reduce using rule 12 (statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN .)

