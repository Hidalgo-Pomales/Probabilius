
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSLIST LISTCHAR ID NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN COMMA MODE PERMU AVG INTER COMPLEM STDDEV VARIAN COMBI MEDIAN UNIONstatement : AVG LPAREN LIST RPARENstatement : PERMU LPAREN LISTCHAR RPARENstatement : PERMU LPAREN LIST RPARENstatement : COMBI LPAREN LIST RPARENstatement : COMBI LPAREN LISTCHAR RPARENstatement : MODE LPAREN LIST RPARENstatement : MEDIAN LPAREN LIST RPARENstatement : UNION LPAREN LIST COMMA LIST RPARENstatement : INTER LPAREN LIST COMMA LIST RPARENstatement : COMPLEM LPAREN LIST COMMA LIST RPARENstatement : VARIAN LPAREN LIST RPARENstatement : STDDEV LPAREN LIST RPARENstatement : ID EQUALS expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : LISTexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,6,7,18,20,21,22,23,],[1,25,25,25,25,25,25,25,]),'INTER':([0,],[2,]),'NUMBER':([0,6,7,18,20,21,22,23,],[3,3,3,3,3,3,3,3,]),'COMMA':([37,44,47,],[54,56,59,]),'VARIAN':([0,],[5,]),'LPAREN':([0,2,5,6,7,10,11,12,13,14,15,16,17,18,20,21,22,23,],[6,19,24,6,6,28,29,30,31,32,33,34,35,6,6,6,6,6,]),'MINUS':([0,1,3,4,6,7,8,18,20,21,22,23,25,26,27,36,38,39,40,41,43,],[7,-23,-22,23,7,7,-21,7,7,7,7,7,-23,23,-19,23,-17,-15,-18,-16,-20,]),'DIVIDE':([1,3,4,8,25,26,27,36,38,39,40,41,43,],[-23,-22,22,-21,-23,22,-19,22,-17,22,-18,22,-20,]),'LIST':([0,6,7,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,54,56,59,],[8,8,8,8,37,8,8,8,8,42,44,45,46,47,48,49,50,52,66,67,68,]),'PLUS':([1,3,4,8,25,26,27,36,38,39,40,41,43,],[-23,-22,21,-21,-23,21,-19,21,-17,-15,-18,-16,-20,]),'$end':([1,3,4,8,9,25,27,36,38,39,40,41,43,55,57,58,60,61,62,63,64,65,69,70,71,],[-23,-22,-14,-21,0,-23,-19,-13,-17,-15,-18,-16,-20,-11,-12,-6,-1,-7,-3,-2,-4,-5,-9,-8,-10,]),'RPAREN':([3,8,25,26,27,38,39,40,41,42,43,45,46,48,49,50,51,52,53,66,67,68,],[-22,-21,-23,43,-19,-17,-15,-18,-16,55,-20,57,58,60,61,62,63,64,65,69,70,71,]),'UNION':([0,],[10,]),'LISTCHAR':([34,35,],[51,53,]),'STDDEV':([0,],[11,]),'MODE':([0,],[12,]),'COMPLEM':([0,],[13,]),'AVG':([0,],[14,]),'TIMES':([1,3,4,8,25,26,27,36,38,39,40,41,43,],[-23,-22,20,-21,-23,20,-19,20,-17,20,-18,20,-20,]),'MEDIAN':([0,],[15,]),'EQUALS':([1,],[18,]),'PERMU':([0,],[16,]),'COMBI':([0,],[17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[9,]),'expression':([0,6,7,18,20,21,22,23,],[4,26,27,36,38,39,40,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> AVG LPAREN LIST RPAREN','statement',4,'p_statement_average','Probabilius.py',105),
  ('statement -> PERMU LPAREN LISTCHAR RPAREN','statement',4,'p_statement_permuCHAR','Probabilius.py',116),
  ('statement -> PERMU LPAREN LIST RPAREN','statement',4,'p_statement_permu','Probabilius.py',128),
  ('statement -> COMBI LPAREN LIST RPAREN','statement',4,'p_statement_combi','Probabilius.py',140),
  ('statement -> COMBI LPAREN LISTCHAR RPAREN','statement',4,'p_statement_combiCHAR','Probabilius.py',151),
  ('statement -> MODE LPAREN LIST RPAREN','statement',4,'p_statement_mode','Probabilius.py',163),
  ('statement -> MEDIAN LPAREN LIST RPAREN','statement',4,'p_statement_median','Probabilius.py',174),
  ('statement -> UNION LPAREN LIST COMMA LIST RPAREN','statement',6,'p_statement_union','Probabilius.py',185),
  ('statement -> INTER LPAREN LIST COMMA LIST RPAREN','statement',6,'p_statement_intersection','Probabilius.py',199),
  ('statement -> COMPLEM LPAREN LIST COMMA LIST RPAREN','statement',6,'p_statement_complement','Probabilius.py',214),
  ('statement -> VARIAN LPAREN LIST RPAREN','statement',4,'p_statement_varian','Probabilius.py',228),
  ('statement -> STDDEV LPAREN LIST RPAREN','statement',4,'p_statement_stddev','Probabilius.py',238),
  ('statement -> ID EQUALS expression','statement',3,'p_statement_assign','Probabilius.py',248),
  ('statement -> expression','statement',1,'p_statement_expr','Probabilius.py',257),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','Probabilius.py',262),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Probabilius.py',263),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','Probabilius.py',264),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Probabilius.py',265),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Probabilius.py',277),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','Probabilius.py',282),
  ('expression -> LIST','expression',1,'p_expression_list','Probabilius.py',287),
  ('expression -> NUMBER','expression',1,'p_expression_number','Probabilius.py',292),
  ('expression -> ID','expression',1,'p_expression_name','Probabilius.py',297),
]
